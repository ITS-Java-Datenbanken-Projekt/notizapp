/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package notiz.app.test;

import notiz.app.test.DatabaseConnection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import notiz.app.test.DatabaseConnection;

/**
 *
 * @author Moritz
 */
public class GUI extends javax.swing.JFrame {
    
    
        private DatabaseConnection konnektor;

    /**
     * Creates new form GUI
     */
    public GUI() {
        try {
            initComponents();

            this.konnektor = new DatabaseConnection("localhost", "notizapp", "root", "");
            this.konnektor.open();


        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Fehler! Verbindung konnte nicht aufgebaut werden: " + ex);
        }
    }
    boolean printOrdner = true;
    boolean printNotiz = true;
    
    ArrayList<Ordner> ordnerArrayListe = new ArrayList();
    ArrayList<Notiz> notizenArrayListe = new ArrayList();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pkOrdnerErstellen = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        btnPKOrdnerErstellen = new javax.swing.JButton();
        PKaddTf = new javax.swing.JTextField();
        btnPKSchliessen = new javax.swing.JButton();
        pkNotizErstellen = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        taNotizErstellen = new javax.swing.JTextArea();
        btnPKNotizErstellen = new javax.swing.JButton();
        btnPKNotizErstellenAbbrechen = new javax.swing.JButton();
        tfNotizErstellenTitel = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        scOrdner = new javax.swing.JScrollPane();
        lOrdner = new javax.swing.JList<>();
        spNotizen = new javax.swing.JScrollPane();
        lNotizen = new javax.swing.JList<>();
        btnopenPKadd = new javax.swing.JButton();
        btnRemoveOrdner = new javax.swing.JButton();
        btnNotizErstellen = new javax.swing.JButton();
        btnNotizLoeschen = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taNotizInhalt = new javax.swing.JTextArea();
        btnNoitzBearbeiten = new javax.swing.JButton();

        pkOrdnerErstellen.setAlwaysOnTop(true);
        pkOrdnerErstellen.setLocation(new java.awt.Point(100, 100));
        pkOrdnerErstellen.setSize(new java.awt.Dimension(400, 300));

        jLabel1.setText("kategorie");

        btnPKOrdnerErstellen.setText("add");
        btnPKOrdnerErstellen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPKOrdnerErstellenActionPerformed(evt);
            }
        });

        PKaddTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PKaddTfActionPerformed(evt);
            }
        });

        btnPKSchliessen.setText("cancel");
        btnPKSchliessen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPKSchliessenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pkOrdnerErstellenLayout = new javax.swing.GroupLayout(pkOrdnerErstellen.getContentPane());
        pkOrdnerErstellen.getContentPane().setLayout(pkOrdnerErstellenLayout);
        pkOrdnerErstellenLayout.setHorizontalGroup(
            pkOrdnerErstellenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pkOrdnerErstellenLayout.createSequentialGroup()
                .addGroup(pkOrdnerErstellenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pkOrdnerErstellenLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jLabel1))
                    .addGroup(pkOrdnerErstellenLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(pkOrdnerErstellenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pkOrdnerErstellenLayout.createSequentialGroup()
                                .addComponent(btnPKOrdnerErstellen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPKSchliessen))
                            .addComponent(PKaddTf, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        pkOrdnerErstellenLayout.setVerticalGroup(
            pkOrdnerErstellenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pkOrdnerErstellenLayout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(PKaddTf, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(pkOrdnerErstellenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPKOrdnerErstellen)
                    .addComponent(btnPKSchliessen))
                .addGap(78, 78, 78))
        );

        taNotizErstellen.setColumns(20);
        taNotizErstellen.setRows(5);
        jScrollPane2.setViewportView(taNotizErstellen);

        btnPKNotizErstellen.setText("erstellen");
        btnPKNotizErstellen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPKNotizErstellenActionPerformed(evt);
            }
        });

        btnPKNotizErstellenAbbrechen.setText("abbrechen");
        btnPKNotizErstellenAbbrechen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPKNotizErstellenAbbrechenActionPerformed(evt);
            }
        });

        tfNotizErstellenTitel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNotizErstellenTitelActionPerformed(evt);
            }
        });

        jLabel2.setText("Titel:");

        jLabel3.setText("Inhalt:");

        javax.swing.GroupLayout pkNotizErstellenLayout = new javax.swing.GroupLayout(pkNotizErstellen.getContentPane());
        pkNotizErstellen.getContentPane().setLayout(pkNotizErstellenLayout);
        pkNotizErstellenLayout.setHorizontalGroup(
            pkNotizErstellenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pkNotizErstellenLayout.createSequentialGroup()
                .addGroup(pkNotizErstellenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pkNotizErstellenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pkNotizErstellenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(pkNotizErstellenLayout.createSequentialGroup()
                                .addComponent(btnPKNotizErstellen)
                                .addGap(18, 18, 18)
                                .addComponent(btnPKNotizErstellenAbbrechen)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(pkNotizErstellenLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pkNotizErstellenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(pkNotizErstellenLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfNotizErstellenTitel, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 168, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pkNotizErstellenLayout.setVerticalGroup(
            pkNotizErstellenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pkNotizErstellenLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pkNotizErstellenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNotizErstellenTitel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pkNotizErstellenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPKNotizErstellen)
                    .addComponent(btnPKNotizErstellenAbbrechen))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lOrdner.setModel(new DefaultListModel<String>());
        lOrdner.setToolTipText("");
        lOrdner.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lOrdnerValueChanged(evt);
            }
        });
        scOrdner.setViewportView(lOrdner);

        lNotizen.setModel(new DefaultListModel<String>());
        lNotizen.setDragEnabled(true);
        lNotizen.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lNotizenValueChanged(evt);
            }
        });
        spNotizen.setViewportView(lNotizen);

        btnopenPKadd.setText("Ordner erstellen");
        btnopenPKadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnopenPKaddActionPerformed(evt);
            }
        });

        btnRemoveOrdner.setText("Ordner löschen");
        btnRemoveOrdner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveOrdnerActionPerformed(evt);
            }
        });

        btnNotizErstellen.setText("Notiz erstellen");
        btnNotizErstellen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNotizErstellenActionPerformed(evt);
            }
        });

        btnNotizLoeschen.setText("Notiz löschen");

        taNotizInhalt.setEditable(false);
        taNotizInhalt.setColumns(20);
        taNotizInhalt.setRows(5);
        jScrollPane1.setViewportView(taNotizInhalt);
        taNotizInhalt.getAccessibleContext().setAccessibleDescription("");

        btnNoitzBearbeiten.setText("bearbeiten");
        btnNoitzBearbeiten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoitzBearbeitenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scOrdner, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnopenPKadd)
                    .addComponent(btnRemoveOrdner, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNotizErstellen)
                            .addComponent(spNotizen, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNoitzBearbeiten)))
                    .addComponent(btnNotizLoeschen, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(spNotizen, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(scOrdner, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNoitzBearbeiten)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnopenPKadd)
                    .addComponent(btnNotizErstellen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveOrdner)
                    .addComponent(btnNotizLoeschen))
                .addContainerGap(254, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnopenPKaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnopenPKaddActionPerformed
        pkOrdnerErstellen.show();
    }//GEN-LAST:event_btnopenPKaddActionPerformed

    private void btnRemoveOrdnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveOrdnerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRemoveOrdnerActionPerformed

    private void btnPKOrdnerErstellenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPKOrdnerErstellenActionPerformed
        String neuerOrdner = PKaddTf.getText().trim();
        Ordner newOrdner = new Ordner(neuerOrdner);
        System.out.println("Objekt Ordner Name:" + newOrdner.getName());
        ordnerArrayListe.add(newOrdner);
        
        DefaultListModel<String> model = (DefaultListModel<String>) lOrdner.getModel();
        model.addElement(newOrdner.getName());
        PKaddTf.setText("");
        pkOrdnerErstellen.hide();
    }//GEN-LAST:event_btnPKOrdnerErstellenActionPerformed

    private void btnPKSchliessenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPKSchliessenActionPerformed
        PKaddTf.setText("");
        pkOrdnerErstellen.hide();
    }//GEN-LAST:event_btnPKSchliessenActionPerformed

    private void lOrdnerValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lOrdnerValueChanged
        if(printOrdner == true){
            String selectedValue = lOrdner.getSelectedValue();
            // Führen Sie die gewünschte Aktion aus
            System.out.println("Ausgewählter Eintrag: " + selectedValue);
            
            DefaultListModel<String> notizenListe = (DefaultListModel<String>) lNotizen.getModel();
            notizenListe.clear();
            taNotizInhalt.setText("");
            
            for(int i = 0; i<notizenArrayListe.size(); i++){
                if(notizenArrayListe.get(i).getName() == selectedValue){
                    notizenListe.addElement(notizenArrayListe.get(i).getTitle());
                    lNotizen.setSelectedValue(ABORT, printOrdner);
                    taNotizInhalt.setText(notizenArrayListe.get(i).getContent());
                }
            }
            
        }
        printOrdner =! printOrdner;
    }//GEN-LAST:event_lOrdnerValueChanged

    private void PKaddTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PKaddTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PKaddTfActionPerformed

    private void btnNoitzBearbeitenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoitzBearbeitenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNoitzBearbeitenActionPerformed

    private void btnNotizErstellenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNotizErstellenActionPerformed
        pkNotizErstellen.show();
    }//GEN-LAST:event_btnNotizErstellenActionPerformed

    private void btnPKNotizErstellenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPKNotizErstellenActionPerformed
        String ausgewaehlterOrdner = lOrdner.getSelectedValue();
        String content =  taNotizErstellen.getText();
        String title = tfNotizErstellenTitel.getText();
        
        Notiz neueNotiz = new Notiz(ausgewaehlterOrdner, title, content);
        notizenArrayListe.add(neueNotiz);
        
        taNotizErstellen.setText("");
        pkNotizErstellen.hide();
    }//GEN-LAST:event_btnPKNotizErstellenActionPerformed

    private void btnPKNotizErstellenAbbrechenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPKNotizErstellenAbbrechenActionPerformed
        pkNotizErstellen.hide();
    }//GEN-LAST:event_btnPKNotizErstellenAbbrechenActionPerformed

    private void tfNotizErstellenTitelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNotizErstellenTitelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNotizErstellenTitelActionPerformed

    private void lNotizenValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lNotizenValueChanged
        if(printNotiz == true){
            String selectedValue = lNotizen.getSelectedValue();
            // Führen Sie die gewünschte Aktion aus
            System.out.println("Ausgewählter Eintrag: " + selectedValue);
            
            for (int i = 0; i < notizenArrayListe.size(); i++) {
                if(notizenArrayListe.get(i).getTitle().equals(selectedValue)){
                    taNotizInhalt.setText(notizenArrayListe.get(i).getContent());
                }
            }
        }
        printNotiz =! printNotiz;
    }//GEN-LAST:event_lNotizenValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PKaddTf;
    private javax.swing.JButton btnNoitzBearbeiten;
    private javax.swing.JButton btnNotizErstellen;
    private javax.swing.JButton btnNotizLoeschen;
    private javax.swing.JButton btnPKNotizErstellen;
    private javax.swing.JButton btnPKNotizErstellenAbbrechen;
    private javax.swing.JButton btnPKOrdnerErstellen;
    private javax.swing.JButton btnPKSchliessen;
    private javax.swing.JButton btnRemoveOrdner;
    private javax.swing.JButton btnopenPKadd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lNotizen;
    private javax.swing.JList<String> lOrdner;
    private javax.swing.JDialog pkNotizErstellen;
    private javax.swing.JDialog pkOrdnerErstellen;
    private javax.swing.JScrollPane scOrdner;
    private javax.swing.JScrollPane spNotizen;
    private javax.swing.JTextArea taNotizErstellen;
    private javax.swing.JTextArea taNotizInhalt;
    private javax.swing.JTextField tfNotizErstellenTitel;
    // End of variables declaration//GEN-END:variables
}
